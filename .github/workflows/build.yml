name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  jbang:
    runs-on: ubuntu-latest
    name: convert
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - uses: actions/cache@v1
      with:
        path: /root/.jbang
        key: $-jbang-$
        restore-keys: |
            $-jbang-
    
    # Prepares the environment and downloads 5etool data (excludes the images)
    - name: "prepare and pull 5etools non-image data"
      run: |
        sudo apt-get update; sudo apt-get -y install curl unzip zip jq
        
        JSON5E_CONVERT_CLI_VERSION=$(jq -r ".json5e_convert_cli_version" versions.json)
        echo "json5e-convert-cli version = $JSON5E_CONVERT_CLI_VERSION"
        echo "JSON5E_CONVERT_CLI_VERSION=$JSON5E_CONVERT_CLI_VERSION" >> $GITHUB_ENV
        
        VERSION_5ETOOLS=$(jq -r ".version_5etools" versions.json)
        echo "5etools version = $VERSION_5ETOOLS"
        echo "VERSION_5ETOOLS=$VERSION_5ETOOLS" >> $GITHUB_ENV
        
        SOURCES=$(echo $(jq -r ".from" config.json))
        echo "Sources = $SOURCES"
        echo "SOURCES=$SOURCES" >> $GITHUB_ENV

        curl -L https://github.com/ebullient/ttrpg-convert-cli/releases/download/${JSON5E_CONVERT_CLI_VERSION}/ttrpg-convert-cli-${JSON5E_CONVERT_CLI_VERSION}-linux-x86_64.tgz -o ttrpg-convert-cli.tgz
        tar -zxvf ttrpg-convert-cli.tgz
        mv ttrpg-convert-cli-${JSON5E_CONVERT_CLI_VERSION}-linux-x86_64/bin/ttrpg-convert ./ttrpg-convert
        ttrpg-convert --help
        # binary at ttrpg-convert

        # Download 5etools data (without images)
        echo "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/5etools-${VERSION_5ETOOLS}.zip"
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/5etools-${VERSION_5ETOOLS}.zip" -o 5etools.zip
        mkdir 5etools
        unzip -q 5etools.zip -d 5etools || echo "unzip finished with errors. yolo."
        
        # Build list of books + adventures (space-separated), setup execution
        BOOKS=$(echo $(find "5etools/data/book" | tail -n +2))
        ADVENTURES=$(echo $(find "5etools/data/adventure" | tail -n +2))

        echo "BOOKS=$BOOKS" >> $GITHUB_ENV
        echo "ADVENTURES=$ADVENTURES" >> $GITHUB_ENV

    # Run convert cli without images
    - name: convert-cli
      run: ttrpg-convert -g 5e -o collapsed_no_images config.json 5etools/data ${{ env.BOOKS }} ${{ env.ADVENTURES }}
    
    # Zip up the markdown
    - name: compress
      run: zip -q -r collapsed_sources_no_images.zip collapsed_no_images
       
    # Download the 5etools image data and extract the data
    - name: "pull images"
      if: ${{ env.SOURCES != '' }}
      run: |
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.z01" -o img-${{ env.VERSION_5ETOOLS }}.z01
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.z02" -o img-${{ env.VERSION_5ETOOLS }}.z02
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.z03" -o img-${{ env.VERSION_5ETOOLS }}.z03
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.z04" -o img-${{ env.VERSION_5ETOOLS }}.z04
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.z05" -o img-${{ env.VERSION_5ETOOLS }}.z05
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.z06" -o img-${{ env.VERSION_5ETOOLS }}.z06
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.z07" -o img-${{ env.VERSION_5ETOOLS }}.z07
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.z08" -o img-${{ env.VERSION_5ETOOLS }}.z08
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.z09" -o img-${{ env.VERSION_5ETOOLS }}.z09
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.z10" -o img-${{ env.VERSION_5ETOOLS }}.z10
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/img-${{ env.VERSION_5ETOOLS }}.zip" -o img-${{ env.VERSION_5ETOOLS }}.zip
        zip -q -s- img-${{ env.VERSION_5ETOOLS }}.zip -O img-combined.zip
        unzip -q img-combined.zip -d 5etools
        rm -f img-${{ env.VERSION_5ETOOLS }}.z*
        rm -f img-combined.zip

    # Run convert cli with images
    - name: convert-cli
      run: ttrpg-convert -g 5e -o collapsed_with_images config.json 5etools/data 5etools/img ${{ env.BOOKS }} ${{ env.ADVENTURES }}
    
    # Zip up the markdown and images
    - name: compress
      if: ${{ env.SOURCES != '' }}
      run: zip -q -r collapsed_sources_with_tokens.zip collapsed_with_images
        
    # Create a Github release
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: "${{ env.VERSION_5ETOOLS }}-${{ env.JSON5E_CONVERT_CLI_VERSION }}-${{ github.sha }}"
        tag_name: "${{ env.VERSION_5ETOOLS }}-${{ env.JSON5E_CONVERT_CLI_VERSION }}-${{ github.sha }}"
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    # Add markdown-only zip artifact to the release
    - name: upload non-image artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: collapsed_sources_no_images.zip
        asset_name: collapsed_sources_no_images.zip
        asset_content_type: application/zip

    # Add markdown + image zip artifact to the release
    - name: upload image artifact
      if: ${{ env.SOURCES != '' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: collapsed_sources_with_tokens.zip
        asset_name: collapsed_sources_with_tokens.zip
        asset_content_type: application/zip
    
